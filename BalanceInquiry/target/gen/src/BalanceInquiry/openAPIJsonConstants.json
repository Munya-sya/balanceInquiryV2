{

"BalanceInquiry__1_0_0" : {
  "openapi" : "3.0.1",
  "info" : {
    "title" : "BalanceInquiry",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "default" : [ ]
  } ],
  "tags" : [ {
    "name" : "BalanceInquiry"
  } ],
  "paths" : {
    "/api/balance/services" : {
      "post" : {
        "tags" : [ "BalanceInquiry" ],
        "description" : "Mock Balance Inquiry",
        "operationId" : "KCB Mock Balance Inquiry",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/requestBody"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/responseBody"
                }
              }
            }
          },
          "400" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/badRequest"
                }
              }
            }
          },
          "401" : {
            "description" : "BadRequest",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "example" : "Unauthorized"
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "extensions" : {
          "x-auth-type" : "Application & Application User",
          "x-throttling-tier" : "Unlimited",
          "x-wso2-application-security" : {
            "security-types" : [ "oauth2", "basic_auth" ],
            "optional" : false
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "requestBody" : {
        "required" : [ "header", "requestPayload" ],
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/requestHeader"
          },
          "requestPayload" : {
            "$ref" : "#/components/schemas/requestPayload"
          }
        }
      },
      "requestHeader" : {
        "required" : [ "callBackURL", "channelCode", "channelName", "featureCode", "messageID", "minorServiceVersion", "routeCode", "serviceCode", "serviceMode", "serviceSubCategory", "subscribeEvents", "timeStamp" ],
        "type" : "object",
        "properties" : {
          "messageID" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Message ID",
            "example" : "06/20/2022"
          },
          "featureCode" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Feature Code",
            "example" : "101"
          },
          "featureName" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Feature Name",
            "example" : "FinancialInquiries"
          },
          "serviceCode" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Service Code",
            "example" : "1001"
          },
          "serviceName" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Service Name",
            "example" : "BalanceInquiry"
          },
          "serviceSubCategory" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Service Sub Category",
            "example" : "ACCOUNT"
          },
          "minorServiceVersion" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Minor Service Version",
            "example" : "1.0"
          },
          "channelCode" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Channel Code",
            "example" : "102"
          },
          "channelName" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Channel Name",
            "example" : "agency"
          },
          "routeCode" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Route Code",
            "example" : "001"
          },
          "timeStamp" : {
            "maxLength" : 14,
            "type" : "string",
            "description" : "Time Stamp",
            "example" : "22222"
          },
          "serviceMode" : {
            "maxLength" : 5,
            "type" : "string",
            "description" : "Service Mode",
            "example" : "sync"
          },
          "subscribeEvents" : {
            "maxLength" : 1,
            "type" : "string",
            "description" : "Subscribe Events",
            "example" : "1"
          },
          "callBackURL" : {
            "maxLength" : 128,
            "type" : "string",
            "description" : "Call back URL"
          }
        }
      },
      "requestPayload" : {
        "required" : [ "additionalData", "primaryData" ],
        "type" : "object",
        "properties" : {
          "primaryData" : {
            "$ref" : "#/components/schemas/primaryData"
          },
          "additionalData" : {
            "$ref" : "#/components/schemas/additionalData"
          }
        }
      },
      "primaryData" : {
        "required" : [ "businessKey", "businessKeyType" ],
        "type" : "object",
        "properties" : {
          "businessKey" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "Business Key. Here it will be Mobile Number",
            "example" : "1250585001"
          },
          "businessKeyType" : {
            "maxLength" : 12,
            "type" : "string",
            "description" : "Description of Key Type. Here it will be value ‘MSISDN’",
            "example" : "AccountNumber"
          }
        }
      },
      "additionalData" : {
        "required" : [ "chargeCustomer", "companyCode" ],
        "type" : "object",
        "properties" : {
          "companyCode" : {
            "type" : "string",
            "example" : "KE0010001"
          },
          "chargeCustomer" : {
            "type" : "string",
            "example" : "NO"
          }
        }
      },
      "responseBody" : {
        "required" : [ "header", "responsePayload" ],
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/responseheader"
          },
          "responsePayload" : {
            "$ref" : "#/components/schemas/responsePayload"
          }
        }
      },
      "responseheader" : {
        "required" : [ "callBackURL", "channelCode", "channelName", "featureCode", "messageID", "minorServiceVersion", "routeCode", "serviceCode", "serviceMode", "serviceSubCategory", "subscribeEvents", "timeStamp" ],
        "type" : "object",
        "properties" : {
          "messageID" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Message ID",
            "example" : "12424253738"
          },
          "conversationID" : {
            "maxLength" : 64,
            "type" : "string",
            "description" : "conversation ID",
            "example" : "a4439be6-24fd-46d1-ad72-709de1af8ffc"
          },
          "routeCode" : {
            "maxLength" : 4,
            "type" : "string",
            "description" : "Route Code",
            "example" : "001"
          },
          "targetSystemID" : {
            "maxLength" : 64,
            "type" : "string",
            "description" : "targetSystem ID",
            "example" : "Not Available"
          },
          "statusCode" : {
            "maxLength" : 64,
            "type" : "string",
            "description" : "Status Code",
            "example" : "0"
          },
          "statusDescription" : {
            "maxLength" : 64,
            "type" : "string",
            "description" : "Status Description",
            "example" : "Success"
          },
          "statusMessage" : {
            "maxLength" : 64,
            "type" : "string",
            "description" : "Status Message",
            "example" : "Success"
          },
          "messageCode" : {
            "maxLength" : 64,
            "type" : "string",
            "description" : "Message Code",
            "example" : "00"
          },
          "ehfInfo" : {
            "required" : [ "ehfDesc", "ehfRef" ],
            "type" : "object",
            "properties" : {
              "ehfRef" : {
                "maxLength" : 64,
                "type" : "string",
                "example" : "OSP-1002"
              },
              "ehfDesc" : {
                "maxLength" : 64,
                "type" : "string",
                "example" : "Processed Successfully"
              }
            }
          }
        }
      },
      "responsePayload" : {
        "required" : [ "additionalData", "primaryData" ],
        "type" : "object",
        "properties" : {
          "primaryData" : {
            "$ref" : "#/components/schemas/responseprimaryData"
          },
          "additionalData" : {
            "$ref" : "#/components/schemas/responseadditionalData"
          }
        }
      },
      "responseprimaryData" : {
        "required" : [ "businessKey", "businessKeyType" ],
        "type" : "object",
        "properties" : {
          "businessKey" : {
            "maxLength" : 16,
            "type" : "string",
            "example" : "1250585001"
          },
          "businessKeyType" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "Account Number"
          }
        }
      },
      "responseadditionalData" : {
        "required" : [ "accountBalance", "companyCode", "currency", "isAccountDormant", "isPostingRestricted", "limitAmount", "lockedAmount", "retentionAmount", "unclearedBalance", "workingBalance" ],
        "type" : "object",
        "properties" : {
          "companyCode" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "KE0010009"
          },
          "currency" : {
            "maxLength" : 5,
            "type" : "string",
            "example" : "KES"
          },
          "unclearedBalance" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "-515.00"
          },
          "accountBalance" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "639389.39"
          },
          "limitAmount" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "0.00"
          },
          "isAccountDormant" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "isPostingRestricted" : {
            "maxLength" : 64,
            "type" : "string"
          },
          "workingBalance" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "639389.39"
          },
          "lockedAmount" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "0.00"
          },
          "retentionAmount" : {
            "maxLength" : 64,
            "type" : "string",
            "example" : "0.00"
          }
        }
      },
      "badRequest" : {
        "type" : "string",
        "example" : "Account Invalid"
      }
    },
    "responses" : {
      "Success" : {
        "description" : "Success",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/responseBody"
            }
          }
        }
      },
      "BadRequest" : {
        "description" : "BadRequest",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/badRequest"
            }
          }
        }
      },
      "Unauthorized" : {
        "description" : "BadRequest",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "string",
              "example" : "Unauthorized"
            }
          }
        }
      },
      "default" : {
        "description" : "BadRequest",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/badRequest"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "default" : {
        "type" : "OAUTH2",
        "flows" : {
          "implicit" : { }
        }
      }
    },
    "extensions" : { }
  },
  "extensions" : {
    "x-wso2-auth-header" : "Authorization",
    "x-wso2-cors" : {
      "corsConfigurationEnabled" : true,
      "accessControlAllowOrigins" : [ "*" ],
      "accessControlAllowCredentials" : true,
      "accessControlAllowHeaders" : [ "authorization", "Access-Control-Allow-Origin", "Content-Type", "SOAPAction", "apikey", "testKey" ],
      "accessControlAllowMethods" : [ "GET", "PUT", "POST", "DELETE", "PATCH", "OPTIONS" ]
    },
    "x-wso2-production-endpoints" : {
      "urls" : [ "https://maven-practice.herokuapp.com" ],
      "type" : "http"
    },
    "x-wso2-sandbox-endpoints" : {
      "urls" : [ "https://maven-practice.herokuapp.com" ],
      "type" : "http"
    },
    "x-wso2-basePath" : "/balances/1.0.0",
    "x-wso2-transports" : [ "http", "https" ],
    "x-wso2-response-cache" : {
      "enabled" : false,
      "cacheTimeoutInSeconds" : 300
    }
  }
}

}